/*
Deployment script for transcendence

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "transcendence"
:setvar DefaultFilePrefix "transcendence"
:setvar DefaultDataPath "C:\Users\Brian\AppData\Local\Microsoft\VisualStudio\SSDT"
:setvar DefaultLogPath "C:\Users\Brian\AppData\Local\Microsoft\VisualStudio\SSDT"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/*
The type for column TransType in table [dbo].[Transactions] is currently  CHAR (10) NOT NULL but is being changed to  CHAR (1) NOT NULL. Data loss could occur.
*/

IF EXISTS (select top 1 1 from [dbo].[Transactions])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
PRINT N'Dropping [dbo].[FK_FundMasterID]...';


GO
ALTER TABLE [dbo].[Transactions] DROP CONSTRAINT [FK_FundMasterID];


GO
PRINT N'Starting rebuilding table [dbo].[Funding_Sources]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Funding_Sources] (
    [FundMasterID] VARCHAR (20) NOT NULL,
    [FundCategory] CHAR (10)    NOT NULL,
    [FundCodeName] CHAR (50)    NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_Funding_Sources1] PRIMARY KEY CLUSTERED ([FundMasterID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Funding_Sources])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_Funding_Sources] ([FundMasterID], [FundCategory], [FundCodeName])
        SELECT   [FundMasterID],
                 [FundCategory],
                 [FundCodeName]
        FROM     [dbo].[Funding_Sources]
        ORDER BY [FundMasterID] ASC;
    END

DROP TABLE [dbo].[Funding_Sources];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Funding_Sources]', N'Funding_Sources';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_Funding_Sources1]', N'PK_Funding_Sources', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Altering [dbo].[Staff]...';


GO
ALTER TABLE [dbo].[Staff] ALTER COLUMN [StaffName] VARCHAR (35) NULL;


GO
PRINT N'Altering [dbo].[Transactions]...';


GO
ALTER TABLE [dbo].[Transactions] ALTER COLUMN [FundMasterID] VARCHAR (20) NOT NULL;

ALTER TABLE [dbo].[Transactions] ALTER COLUMN [TransType] CHAR (1) NOT NULL;


GO
PRINT N'Creating [dbo].[FK_FundMasterID]...';


GO
ALTER TABLE [dbo].[Transactions] WITH NOCHECK
    ADD CONSTRAINT [FK_FundMasterID] FOREIGN KEY ([FundMasterID]) REFERENCES [dbo].[Funding_Sources] ([FundMasterID]) ON DELETE CASCADE ON UPDATE CASCADE;


GO
PRINT N'Creating [dbo].[GetTransCategoriesByDept]...';


GO
CREATE procedure [dbo].[GetTransCategoriesByDept]
(
	@year int,
	@deptid int = null,
	@fundcategory varchar(10) = null,
	@staffid int = null
)
as
begin
	select C.Category as [Category], isnull(F.Amount, 0) as [Amount]
	from (
		values (1), (2), (3), (4), (5), 
				(6), (7), (8), (9), (10), (11), (12)
	) [MonthList](Months)
	Left Join (
		select case when @fundcategory is null then FundCategory else FundCodeName end as [Category]
		from Transactions, Funding_Sources
		where (@deptid is null or DeptID = @deptid) and Transactions.FundMasterID = Funding_Sources.FundMasterID and 
			(@fundcategory is null or FundCategory like '%' + @fundcategory + '%') and
			(@staffid is null or StaffID = @staffid) and datepart(year, TransDate) = @year
		group by case when @fundcategory is null then FundCategory else FundCodeName end
	) C on C.Category is not null
	Left Join (
		select datepart(month, TransDate) as [Month],case when @fundcategory is null then FundCategory else FundCodeName end as [Category], 
			Sum(TransAmount) as [Amount]
		from Transactions, Funding_Sources
		where (@deptid is null or DeptID = @deptid) and Transactions.FundMasterID = Funding_Sources.FundMasterID and 
			(@fundcategory is null or FundCategory like '%' + @fundcategory + '%') and
			(@staffid is null or StaffID = @staffid) and datepart(year, TransDate) = @year
		group by case when @fundcategory is null then FundCategory else FundCodeName end, datepart(month, TransDate)
	) F on F.[Month] = [Months] and F.Category = C.Category 
	order by Months
end
GO
PRINT N'Creating [dbo].[GetTransCategoriesForPie]...';


GO
CREATE PROCEDURE [dbo].[GetTransCategoriesForPie]
(
	@year int,
	@deptid int = null,
	@fundcategory varchar(10) = null,
	@staffid int = null
)
as
DECLARE @amtSum int
SET @amtSum = (select Sum(TransAmount) as [Amount]
			from Funding_Sources F, Transactions T
			where T.FundMasterID = F.FundMasterID and (@deptid is null or DeptID = @deptid) and 
			(@fundcategory is null or FundCategory like '%' + @fundcategory + '%') and
			(@staffid is null or StaffID = @staffid) and datepart(year, TransDate) = @year)

SELECT CASE WHEN @fundcategory is null THEN FundCategory ELSE FundCodeName END as [Category], (SUM(TransAmount) / @amtSum) * 100 as [Amount]
from Funding_Sources F, Transactions T
where T.FundMasterID = F.FundMasterID and (@deptid is null or DeptID = @deptid) and 
			(@fundcategory is null or FundCategory like '%' + @fundcategory + '%') and
			(@staffid is null or StaffID = @staffid) and datepart(year, TransDate) = @year
group by case when @fundcategory is null then FundCategory else FundCodeName end
GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[Transactions] WITH CHECK CHECK CONSTRAINT [FK_FundMasterID];


GO
PRINT N'Update complete.';


GO
