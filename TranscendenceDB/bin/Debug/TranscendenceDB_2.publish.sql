/*
Deployment script for transcendence

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "transcendence"
:setvar DefaultFilePrefix "transcendence"
:setvar DefaultDataPath ""
:setvar DefaultLogPath ""

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
IF EXISTS (SELECT 1
           FROM   [sys].[databases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [sys].[databases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
PRINT N'Dropping [dbo].[FK_FundMasterID]...';


GO
ALTER TABLE [dbo].[Transactions] DROP CONSTRAINT [FK_FundMasterID];


GO
PRINT N'Dropping [dbo].[FK_Staff]...';


GO
ALTER TABLE [dbo].[Transactions] DROP CONSTRAINT [FK_Staff];


GO
PRINT N'Dropping [dbo].[FK_Dept]...';


GO
ALTER TABLE [dbo].[Transactions] DROP CONSTRAINT [FK_Dept];


GO
PRINT N'Starting rebuilding table [dbo].[Transactions]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Transactions] (
    [TransID]         INT            IDENTITY (1, 1) NOT NULL,
    [UniqueID]        INT            NOT NULL,
    [DeptID]          INT            NOT NULL,
    [StaffID]         INT            NOT NULL,
    [FundMasterID]    CHAR (10)      NOT NULL,
    [TransType]       CHAR (10)      NOT NULL,
    [TransDate]       DATE           NOT NULL,
    [TransTransfer]   DECIMAL (6, 2) NOT NULL,
    [TransAdjustment] DECIMAL (6, 2) NOT NULL,
    [TransCredit]     DECIMAL (6, 2) NOT NULL,
    [TransCharge]     DECIMAL (6, 2) NOT NULL,
    [TransAmount]     AS             ((([TransCharge] - [TransTransfer]) - [TransAdjustment]) - [TransCredit]),
    PRIMARY KEY CLUSTERED ([TransID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Transactions])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_Transactions] ([UniqueID], [DeptID], [StaffID], [FundMasterID], [TransType], [TransDate], [TransTransfer], [TransAdjustment], [TransCredit], [TransCharge])
        SELECT [UniqueID],
               [DeptID],
               [StaffID],
               [FundMasterID],
               [TransType],
               [TransDate],
               [TransTransfer],
               [TransAdjustment],
               [TransCredit],
               [TransCharge]
        FROM   [dbo].[Transactions];
    END

DROP TABLE [dbo].[Transactions];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Transactions]', N'Transactions';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[FK_FundMasterID]...';


GO
ALTER TABLE [dbo].[Transactions] WITH NOCHECK
    ADD CONSTRAINT [FK_FundMasterID] FOREIGN KEY ([FundMasterID]) REFERENCES [dbo].[Funding_Sources] ([FundMasterID]) ON DELETE CASCADE ON UPDATE CASCADE;


GO
PRINT N'Creating [dbo].[FK_Staff]...';


GO
ALTER TABLE [dbo].[Transactions] WITH NOCHECK
    ADD CONSTRAINT [FK_Staff] FOREIGN KEY ([StaffID]) REFERENCES [dbo].[Staff] ([StaffID]);


GO
PRINT N'Creating [dbo].[FK_Dept]...';


GO
ALTER TABLE [dbo].[Transactions] WITH NOCHECK
    ADD CONSTRAINT [FK_Dept] FOREIGN KEY ([DeptID]) REFERENCES [dbo].[Departments] ([DeptID]) ON DELETE CASCADE ON UPDATE CASCADE;


GO
PRINT N'Altering [dbo].[GetTransCategoriesByDept]...';


GO
ALTER procedure [dbo].[GetTransCategoriesByDept]
(
	@deptid as int = null
)
as
begin
	select C.FundCategory as [Category], isnull(F.Amount, 0) as [Amount]
	from (
		values (1), (2), (3), (4), (5), 
				(6), (7), (8), (9), (10), (11), (12)
	) [MonthList](Months)
	Left Join (
		select FundCategory
		from Transactions, Funding_Sources
		where (@deptid is null or DeptID = @deptid) and Transactions.FundMasterID = Funding_Sources.FundMasterID
		group by FundCategory
	) C on C.FundCategory is not null
	Left Join (
		select datepart(month, TransDate) as [Month],FundCategory, Sum(TransAmount) as [Amount]
		from Transactions, Funding_Sources
		where (@deptid is null or DeptID = @deptid) and Transactions.FundMasterID = Funding_Sources.FundMasterID
		group by FundCategory, datepart(month, TransDate)
	) F on F.[Month] = [Months] and F.FundCategory = C.FundCategory
	order by Months
end
GO
PRINT N'Refreshing [dbo].[GetTransCategoriesForPie]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[GetTransCategoriesForPie]';


GO
